#!/bin/bash

# TESTS:
# -----
#
# - Too many lines (*)
# - Too long string (*)
# - Empty file
# o Unexistant file
# - Spaces in between (*)
# o Numeric comparison (--numeric)
# o Wrong usage of parameters (./main -o for example)
# o No arguments
#
# (*) Test cases

PROGRAM_NAME='qsort'
INPUTS_DIR='test/inputs'
UTILS_DIR='test/utils'
RUN_VALGRIND=


function TEST_help() {
    exec_program -h
    [[ $? = 0 ]] && echo OK || echo FAILED $?
}

function TEST_normal() {
    exec_program -o - $INPUTS_DIR/easy.txt
    [[ $? = 0 ]] && echo OK || echo FAILED $?
}

function TEST_quijote() {
    ./$PROGRAM_NAME -o - $INPUTS_DIR/quijote.txt 2>/dev/null \
        | python $UTILS_DIR/check_ordered.py
    [[ $? = 0 ]] && echo OK || echo FAILED $?
}

function TEST_numeric() {
    ./$PROGRAM_NAME -n -o - $INPUTS_DIR/numeros.txt 2>/dev/null \
        | python $UTILS_DIR/check_ordered.py numeric
    [[ $? = 0 ]] && echo OK || echo FAILED $?
}

function TEST_wrong_args() {
    exec_program -o
    [[ $? != 0 ]] && echo OK || echo FAILED $?
}

function TEST_out_equals_in() {
    cp $INPUTS_DIR/numeros.txt $INPUTS_DIR/numeros.txt.cp
    #exec_program -o $INPUTS_DIR/numeros.txt.cp
    [[ $? != 0 ]] && echo OK || echo FAILED $?
    rm $INPUTS_DIR/numeros.txt.cp
}

function TEST_no_args() {
    exec_program
    [[ $? != 0 ]] && echo OK || echo FAILED $?
}

function TEST_unexistant_file() {
    exec_program -o - qjqdjwidwqj
    [[ $? != 0 ]] && echo OK || echo FAILED $?
}


function exec_program() {
    ./$PROGRAM_NAME $@ > /dev/null 2>&1
}


# Setup
cd $(dirname $0)/..

gcc -w -g -o $PROGRAM_NAME src/main.c
gcc_code=$?
[[ $gcc_code != 0 ]] && exit $gcc_code

# Run tests
success_count=0
for t in $(declare -F | cut -d' ' -f3 | grep -E '^TEST_'); do
    msg=$($t)
    echo $msg $(echo $t | sed 's/_/ /g' | sed 's/TEST //g')
    [[ $(echo -n $msg | grep -oE "OK$") == "OK" ]] && success_count=$((success_count+1))
done
echo

count=$(declare -F | cut -d' ' -f3 | grep -E '^TEST_' | wc -l)
echo Success $((100*success_count/count))'%'
echo

if [[ ! -z $RUN_VALGRIND ]]; then
    echo Running with valgrind...
    valgrind ./$PROGRAM_NAME -o /dev/null $(dirname $0)/inputs/text1.txt
    valgrind_code=$?
    if [[ $valgrind_code = 127 ]]; then
        echo Valgrind not installed
    elif [[ $valgrind_code != 0 ]]; then
        echo Valgrind FAILED with code $valgrind_code
    fi
fi
